模块I：实现个人中心项目的登陆与注册页面

1. 导入并配置使用React-Router来构建单页应用
2. 了解Ant Design UI框架，学习使用方法和设计理念。导入Antd到项目中。
3. 安装依赖并在webpack中配置less-loader预处理器。
4. 学习CSS Module与模块化概念，轻松地开发与维护样式库。
5. 实现个人中心项目的登陆功能（账号密码登陆）
    涉及：
        输入组件；
        表单；
        验证。
6. 实现个人中心项目的登陆功能（手机验证码登陆）
    涉及：
        验证码发送倒计时；
        在时间截止时重置倒计时；
        在收到短信后重置倒计时。
7. 注册页面（布局）（表单验证功能）
    validator(rule, value) => Promise
    第一个参数为当前表单项的规则，第二个参数为表单项的值
    返回一个Promise作为结果。
8. 密码强度的动态提示
    <Popover> 弹出密码强度信息
    <Progress> 用于展示密码强度的进度条
9. 创建一个更直观的密码强弱提示文本
10. 实现注册页面的剩余功能：
    涉及： 
        手机号码的下拉前缀
        验证码发送与输入栏


预习知识：
1. RESTFul API: 
先说REST:Representational State Transfer(REST)
它是一种构架风格，目的是在网络中方便不同软件、程序互相传递信息。
而符合这种定义的API，就是RESTFul API。
2. 常用的HTTP请求：
GET     显示制定的资源（用于读取数据且无副作用的非幂等操作中）
HEAD    类似GET，但是服务器不会传回响应主体（即内容）。用于客户端查看服务器的性能中。
POST    想指定资源提交数据，请求服务器处理。比如文件上传与表单数据提交。是非幂等的。
PUT     想指定资源更新最新内容，是幂等的。用新数据取代指定资源的内容。
DELETE  用于请求服务器删除所请求URI所识别的资源，DELETE请求后指定的资源会被删除。是幂等的。
CONNECT 是HTTP/1.1协议预留的，能够将连接改为管道方式的代理服务器，通常用于SSL加密服务器与非加密的HTTP代理服务器的通信。（科学上网？）
OPTIONS 与HEAD类似，也是用于客户端查看服务器性能。会返回该资源支持的所有HTTP请求方法。JS的XMLHttpRequest对象进行CORS跨域资源共享时，就是用OPTIONS方法发送嗅探请求，判断是否有对指定资源的访问请求。
TRACE   请求服务器回显其收到的请求信息，用于HTTP请求的测试或诊断
PATCH   用于资源的部分更新（PUT用于资源的整体更新）。它的PUT的区别是：当资源不存在的时候，PATCH会创建一个新资源而PUT只会对已存在的资源进行更新。



模块II：个人中心项目主页的实现


模块III：个人中心项目标签页的实现


模块IV：个人中心项目后端接口的对接

